//Создать  базовый  класс  «квадрат».  Элементы  класса:  поле,  задающее 
//длину  стороны (статус  доступа  protected);  конструктор  для  инициализации
//поля;  функция  для  вычисления  периметра  квадрата;  функция  для  печати
//длины  стороны  и  периметра.Создать  производный  класс  «прямоугольник».
//Элементы  класса : дополнительное  поле, задающее  другую  сторону;
//конструктор  для  инициализации  полей;  переопределенная  функция  для
//вычисления  периметра  прямоугольника;  переопределенная  функция  для
//печати длин сторон и периметра.Создать по 1 объекту каждого из  классов.
//Показать  вызов  созданных  функций. При  переопределении  функций
//обеспечить и продемонстрировать два варианта : статический полиморфизм и
//динамический полиморфизм.
//

#include <iostream>
#include "Rectangle.h"

int main()
{
    // создание объектов класса

    Square box_1(2);
    Rectangle box_2(2, 3);

    
    Square* p = &box_1; // создание указателя на объект базового типа

    std::cout << p->get_perimeter() << std::endl; // вызов виртуальной функции объекта базового типа через указатель

    p->print(); // вызов обычной функции

    std::cout << std::endl;

    p = &box_2; // переопределение указателя

    std::cout << p->get_perimeter() << std::endl; // вызов переопределенной виртуальной функции унаследованного объекта через указатель

    p->print(); // вызов переопределенного не виртуального метода через указатель типа родительского класса

    std::cout << std::endl;

    box_2.print(); // для сравнения вызов переопределенного метода через сам объект
}
